/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/f110_gym/envs/base_classes.py:93: UserWarning: Chosen integrator is RK4. This is different from previous versions of the gym.
  warnings.warn(f"Chosen integrator is RK4. This is different from previous versions of the gym.")
Traceback (most recent call last):
  File "/Users/weichaozhou/Workspace/MIT-REALM/ada_cbf/f1tenth_gym/examples/waypoint_follow_sysid.py", line 497, in <module>
    main()
  File "/Users/weichaozhou/Workspace/MIT-REALM/ada_cbf/f1tenth_gym/examples/waypoint_follow_sysid.py", line 485, in main
    speed, steer = planner.plan(obs, work)
  File "/Users/weichaozhou/Workspace/MIT-REALM/ada_cbf/f1tenth_gym/examples/waypoint_follow_sysid.py", line 404, in plan
    lookahead_point = self._get_current_waypoint(self.waypoints, lookahead_distance, position, pose_theta)
  File "/Users/weichaozhou/Workspace/MIT-REALM/ada_cbf/f1tenth_gym/examples/waypoint_follow_sysid.py", line 376, in _get_current_waypoint
    lookahead_point, i2, t2 = first_point_on_trajectory_intersecting_circle(position, lookahead_distance, wpts, i+t, wrap=True)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/dispatcher.py", line 375, in _compile_for_args
    return_val = self.compile(tuple(argtypes))
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/dispatcher.py", line 905, in compile
    cres = self._compiler.compile(args, return_type)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/dispatcher.py", line 80, in compile
    status, retval = self._compile_cached(args, return_type)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/dispatcher.py", line 94, in _compile_cached
    retval = self._compile_core(args, return_type)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/dispatcher.py", line 107, in _compile_core
    cres = compiler.compile_extra(self.targetdescr.typing_context,
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/compiler.py", line 744, in compile_extra
    return pipeline.compile_extra(func)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/compiler.py", line 438, in compile_extra
    return self._compile_bytecode()
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/compiler.py", line 506, in _compile_bytecode
    return self._compile_core()
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/compiler.py", line 472, in _compile_core
    pm.run(self.state)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/typed_passes.py", line 468, in run_pass
    lower.lower()
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/lowering.py", line 210, in lower
    self.library.add_ir_module(self.module)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/codegen.py", line 730, in add_ir_module
    self.add_llvm_module(ll_module)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/codegen.py", line 733, in add_llvm_module
    self._optimize_functions(ll_module)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/numba/core/codegen.py", line 664, in _optimize_functions
    fpm.run(func)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/llvmlite/binding/passmanagers.py", line 775, in run
    return ffi.lib.LLVMPY_RunFunctionPassManager(self, function)
  File "/opt/anaconda3/envs/envelope/lib/python3.10/site-packages/llvmlite/binding/ffi.py", line 192, in __call__
    return self._cfn(*args, **kwargs)
KeyboardInterrupt
